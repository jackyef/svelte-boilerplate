(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{13:function(t,e,o){var n=o(14);"string"==typeof n&&(n=[[t.i,n,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};o(2)(n,a);n.locals&&(t.exports=n.locals)},14:function(t,e,o){(t.exports=o(1)(!1)).push([t.i,".content.svelte-o02icb{padding:0 16px}",""])},15:function(t,e,o){"use strict";o.r(e);var n=o(0);o(13);function a(t){var e,o;Object(n.m)(this,t),this._state=Object(n.c)({},t.data),this._intro=!!t.intro,this._fragment=(this._state,{c(){(e=Object(n.g)("div")).innerHTML='<h2>\n\t\t\t\t\tLazyloading\n\t\t\t\t</h2>\n\t\t\t\t<p>\n\t\t\t\t\tThis part here will be Lazy-loaded. The boilerplate provide a <code>Loadable</code> component for this purpose.\n\t\t\t\t\tThe component was taken straight from <a href="https://github.com/kaisermann/svelte-loadable/">svelte-loadable</a>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf you look at your browser devtools, in the network tab, you should see that there is another js chunk loaded apart from the main bundle.js file.\n\t\t\t\t\tThat js chunk is responsible for rendering this component.\n\t\t\t\t</p>',e.className="content svelte-o02icb"},m(t,a){Object(n.n)(t,e,a),o=!0},p:n.o,i(t,e){o||this.m(t,e)},o:n.s,d(t){t&&Object(n.j)(e)}}),t.target&&(this._fragment.c(),this._mount(t.target,t.anchor)),this._intro=!0}Object(n.c)(a.prototype,n.p),e.default=a}}]);